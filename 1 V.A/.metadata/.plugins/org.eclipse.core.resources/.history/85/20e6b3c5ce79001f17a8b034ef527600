package view;
import java.awt.BorderLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import model.BaseDados;
import model.Produto;

public class TelaProdutos extends JFrame {

    private JTable tabelaProdutos;
    private DefaultTableModel tableModel;

    public TelaProdutos() {
        // Configurações da tela
        setTitle("Lista de Produtos");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Painel principal
        JPanel panel = new JPanel(new BorderLayout());
        getContentPane().add(panel);

        // Criando a tabela
        String[] colunas = {"Nome", "Código de Barras", "Preço", "Estoque", "Validade"};
        tableModel = new DefaultTableModel(colunas, 0); // Modelo de tabela com colunas

        tabelaProdutos = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(tabelaProdutos);
        panel.add(scrollPane, BorderLayout.CENTER);

        // Botão para atualizar a tabela
        JButton btnAtualizar = new JButton("Atualizar Produtos");
        btnAtualizar.addActionListener(e -> updateTable());
        panel.add(btnAtualizar, BorderLayout.SOUTH);

        // Exibe a janela
        setVisible(true);
    }

    // Método para atualizar a tabela com os produtos
    private void updateTable() {
        // Limpa a tabela antes de adicionar novos dados
        tableModel.setRowCount(0);

        // Obtenha a lista de produtos (isso depende da sua implementação)
        ArrayList<Produto> produtos = BaseDados.getProdutos();

        // Formato desejado para exibição da data de validade
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        // Preenche a tabela com os produtos
        for (Produto produto : produtos) {
            // Formata a data de validade para ser mais legível
            String validadeFormatada = dateFormat.format(produto.getValidade());

            // Adiciona uma nova linha na tabela com os dados formatados
            tableModel.addRow(new Object[]{
                    produto.getNome(),
                    produto.getCodBarras(),
                    produto.getPreco(),
                    produto.getEstoque(),
                    validadeFormatada // Aqui está a data formatada
            });
        }
    }

    public static void main(String[] args) {
        // Inicializa a interface
        new TelaProdutos();

        // Simula a inicialização da base de dados (se necessário)
        BaseDados.inicializarBase();
    }
}
