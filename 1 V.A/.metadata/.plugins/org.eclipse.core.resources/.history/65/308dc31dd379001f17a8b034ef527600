package view;

import model.BaseDados;
import model.CampanhaQueimaEstoque;
import model.Compra;
import model.Gerente;
import model.Produto;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class TelaProdutos extends JFrame {
    private JTable table;
    private DefaultTableModel tableModel;
    private Gerente gerente;

    public TelaProdutos() {
        setTitle("Sistema de Supermercado");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        initUI();
    }

    private void initUI() {
        // Obter a única instância do Gerente
        gerente = Gerente.getInstancia("Jose Santos", "111.111.111-11", 3200.50);
        BaseDados.inicializarBase();

        // Criar layout
        JPanel panel = new JPanel(new BorderLayout());

        // Criar a tabela de produtos
        tableModel = new DefaultTableModel(new Object[]{"Nome", "Código", "Preço", "Estoque", "Validade"}, 0);
        table = new JTable(tableModel);
        updateTable();

        // Botões para realizar ações
        JButton comprarButton = new JButton("Comprar Produto");
        JButton queimaEstoqueButton = new JButton("Aplicar Queima de Estoque");
        JButton exibirButton = new JButton("Exibir Produtos");

        comprarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                realizarCompra();
            }
        });

        queimaEstoqueButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                CampanhaQueimaEstoque.aplicarCampanha();
                updateTable();
                JOptionPane.showMessageDialog(null, "Campanha de queima de estoque aplicada!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        });

        exibirButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateTable();
            }
        });

        // Adicionar componentes à interface
        panel.add(new JScrollPane(table), BorderLayout.CENTER);

        JPanel buttonPanel = new JPanel();
        buttonPanel.add(comprarButton);
        buttonPanel.add(queimaEstoqueButton);
        buttonPanel.add(exibirButton);

        panel.add(buttonPanel, BorderLayout.SOUTH);
        add(panel);
    }

    // Método para atualizar a tabela de produtos
    private void updateTable() {
        tableModel.setRowCount(0); // Limpar tabela
        ArrayList<Produto> produtos = BaseDados.getProdutos();
        for (Produto produto : produtos) {
            tableModel.addRow(new Object[]{
                    produto.getNome(),
                    produto.getCodBarras(),
                    produto.getPreco(),
                    produto.getEstoque(),
                    produto.getValidade()
            });
        }
    }

    // Método para realizar uma compra
    private void realizarCompra() {
        String codigoBarras = JOptionPane.showInputDialog(this, "Informe o código de barras do produto:");
        Produto produto = BaseDados.buscarProduto(codigoBarras);

        if (produto != null) {
            String quantidadeStr = JOptionPane.showInputDialog(this, "Informe a quantidade do produto:");
            try {
                int quantidade = Integer.parseInt(quantidadeStr);
                Compra compra = new Compra();
                compra.adicionarProduto(produto, quantidade);
                
                // Verificar se o gerente pode aplicar o desconto
                gerente.darDesconto(compra);

                JOptionPane.showMessageDialog(this, "Compra realizada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                updateTable(); // Atualizar tabela após compra
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Quantidade inválida!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Produto não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaProdutos().setVisible(true);
            }
        });
    }
}
